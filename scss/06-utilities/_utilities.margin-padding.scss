@use "../01-settings/settings.spacing" as *;

// Mixin to generate margin utility classes
@mixin margin-utility($rem-value) {
  $px-value: $rem-value * 16;
  $m: "u-m-#{$px-value}"; // Margin (all 4 sides)
  $mt: "u-mt-#{$px-value}"; // Margin top
  $mr: "u-mr-#{$px-value}"; // Margin right
  $mb: "u-mb-#{$px-value}"; // Margin bottom
  $ml: "u-ml-#{$px-value}"; // Margin left
  $mx: "u-mx-#{$px-value}"; // Margin horizontal
  $my: "u-my-#{$px-value}"; // Margin vertical

  .#{$m} {
    margin: #{$rem-value}rem;
  }
  .#{$mt} {
    margin-top: #{$rem-value}rem;
  }
  .#{$mr} {
    margin-right: #{$rem-value}rem;
  }
  .#{$mb} {
    margin-bottom: #{$rem-value}rem;
  }
  .#{$ml} {
    margin-left: #{$rem-value}rem;
  }
  .#{$mx} {
    margin-inline: #{$rem-value}rem;
  }
  .#{$my} {
    margin-block: #{$rem-value}rem;
  }
}

// Mixin to generate padding utility classes
@mixin padding-utility($rem-value) {
  $px-value: $rem-value * 16;
  $p: "u-p-#{$px-value}"; // Padding (all 4 sides)
  $pt: "u-pt-#{$px-value}"; // Padding top
  $pr: "u-pr-#{$px-value}"; // Padding right
  $pb: "u-pb-#{$px-value}"; // Padding bottom
  $pl: "u-pl-#{$px-value}"; // Padding left
  $px: "u-px-#{$px-value}"; // Padding horizontal
  $py: "u-py-#{$px-value}"; // Padding vertical

  .#{$p} {
    padding: #{$rem-value}rem;
  }
  .#{$pt} {
    padding-top: #{$rem-value}rem;
  }
  .#{$pr} {
    padding-right: #{$rem-value}rem;
  }
  .#{$pb} {
    padding-bottom: #{$rem-value}rem;
  }
  .#{$pl} {
    padding-left: #{$rem-value}rem;
  }
  .#{$px} {
    padding-inline: #{$rem-value}rem;
  }
  .#{$py} {
    padding-block: #{$rem-value}rem;
  }
}

// Final output
@for $i from 1 through ceil(calc(($ending-rem-value - $starting-rem-value) / $rem-increment)) {
  $rem-value: $starting-rem-value + ($i - 1) * 0.25;
  @include margin-utility($rem-value);
  @include padding-utility($rem-value);
}
